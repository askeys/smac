# The name of our project is "SMSTRUCTURE".  CMakeLists files in this project can
# refer to the root source directory of the project as ${SMSTRUCTURE_SOURCE_DIR} and
# to the root binary directory of the project as ${SMSTRUCTURE_BINARY_DIR}.

#build python wrappers:
#link them with the SMSTRUCTURE shared library

#FIND_PACKAGE(SWIG REQUIRED)
#INCLUDE(${SWIG_USE_FILE})

#FIND_PACKAGE(PythonLibs)
#INCLUDE_DIRECTORIES(${PYTHON_INCLUDE_PATH})

#INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})

#SET(CMAKE_SWIG_FLAGS "-I../../../include")

#SET_SOURCE_FILES_PROPERTIES(smac.i PROPERTIES CPLUSPLUS ON)
#SET_SOURCE_FILES_PROPERTIES(smac.i PROPERTIES SWIG_FLAGS "-Wall")

#SWIG_ADD_MODULE(smac python smac.i)

#SET(W_LIBRARIES_USED smac;m;${PYTHON_LIBRARIES})

#IF(USE_OPENBABEL)
	#SET(W_LIBRARIES_USED ${W_LIBRARIES_USED};openbabel)
#ENDIF(USE_OPENBABEL)

#SWIG_LINK_LIBRARIES(smac ${W_LIBRARIES_USED})	

CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

# An attempt
FIND_PACKAGE( Boost REQUIRED)
FIND_PACKAGE( Boost COMPONENTS python REQUIRED)
FIND_PACKAGE( PythonLibs REQUIRED)

SET(BOOST_USE_STATIC_LIBS OFF)
SET(BOOST_USE_MULTITHREAD ON)

INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${PYTHON_INCLUDE_PATH})

ADD_LIBRARY(pysmac MODULE py++/bindings.cpp)
TARGET_LINK_LIBRARIES(pysmac ${PYTHON_LIBRARY} ${Boost_PYTHON_LIBRARY})
